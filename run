#!/bin/bash
# This script is a fork of https://github.com/excelsiord/docker-dropbox

# Set UID/GID if not provided with enviromental variable(s).
if [ -z "$DBOX_UID" ]; then
	DBOX_UID=$(cat /etc/passwd | grep dropbox | cut -d: -f3)
	echo "DBOX_UID variable not specified, defaulting to dropbox user id ($DBOX_UID)"
fi

if [ -z "$DBOX_GID" ]; then
	DBOX_GID=$(cat /etc/group | grep dropbox | cut -d: -f3)
	echo "DBOX_GID variable not specified, defaulting to dropbox user group id ($DBOX_GID)"
fi

# Look for existing group, if not found create dropbox with specified GID.
FIND_GROUP=$(grep ":$DBOX_GID:" /etc/group)

if [ -z "$FIND_GROUP" ]; then
	usermod -g users dropbox
	groupdel dropbox
	groupadd -g $DBOX_GID dropbox
fi

# Set dropbox account's UID.
usermod -u $DBOX_UID -g $DBOX_GID --non-unique dropbox > /dev/null 2>&1

# Change ownership to dropbox account on all working folders.
chown -R $DBOX_UID:$DBOX_GID /home/dbox

# Change permissions on Dropbox folder
chmod 755 /home/dbox/Dropbox

#  Dropbox did not shutdown properly? Remove files.
[ ! -e "/home/dbox/.dropbox/command_socket" ] || rm /home/dbox/.dropbox/command_socket
[ ! -e "/home/dbox/.dropbox/iface_socket" ]   || rm /home/dbox/.dropbox/iface_socket
[ ! -e "/home/dbox/.dropbox/unlink.db" ]      || rm /home/dbox/.dropbox/unlink.db
[ ! -e "/home/dbox/.dropbox/dropbox.pid" ]    || rm /home/dbox/.dropbox/dropbox.pid

# Update Dropbox to latest version unless DBOX_SKIP_UPDATE is set
if [[ -z "$DBOX_SKIP_UPDATE" ]]; then
	echo "Checking for latest Dropbox version..."
	sleep 1
	# Get download link for latest dropbox version
	DL=$(curl -I -s https://www.dropbox.com/download/\?plat\=lnx.x86_64 | grep location | awk -F'location: ' '{print $2}')
	# Strip CRLF
	DL=${DL//[$'\t\r\n ']}
	# Extract version string
	Latest=$(echo $DL | sed 's/.*x86_64-\([0-9]*\.[0-9]*\.[0-9]*\)\.tar\.gz/\1/')
	# Get current Version
	Current=$(cat /home/dbox/.dropbox-dist/VERSION)
	echo "Latest   :" $Latest
	echo "Installed:" $Current
	if [ ! -z "${Latest}" ] && [ ! -z "${Current}" ] && [ $Current != $Latest ]; then
	        echo "Downloading Dropbox v$Latest..."
	        tmpdir=`mktemp -d`
	        wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf - -C $tmpdir
	        echo "Installing new version..."
	        rm -rf /home/dbox/.dropbox-dist/*
	        mv $tmpdir/.dropbox-dist/* /home/dbox/.dropbox-dist/*
	        rm -rf $tmpdir
	        echo "Dropbox updated to v$Latest"
	else
		echo "Dropbox is up-to-date"
	fi
fi

echo "Starting dropboxd ($(cat /home/dbox/.dropbox-dist/VERSION))..."
umask 002
exec su dropbox -s /bin/bash -c /home/dbox/.dropbox-dist/dropboxd
